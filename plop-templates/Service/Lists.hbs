import errorCode from '../../errorCode'; // 進行後端error code提示
import $http from '@/modules/FPKG-230000-BackendCore/prototypes/axios'; // 後端溝通
import $store from '@/modules/FPKG-50000-Vuex/index'; // lists 與axios溝通

const API = '{{BASE_API}}/lists';

export namespace typeLists {
  export type request = pageinator & {
    /** 複合搜尋 */
    search_complex?: string;
  };

  export type response = pageinator & { list: item[] };

  export type item = {
    {{key}}: number
    {{#each types}}
    {{{this}}}
    {{/each}}
  };
}

export default async (req?: typeLists.request): Promise<typeLists.response> => {
  const params = preFormater(req);
  return $http
    .get(API, { params })
    .then(d => {
      if (d.data.code === 0) {
        const result = d.data.response;
        $store.dispatch('getList', result);
        if (result.list !== null && result.list.length) {
          return result;
        }
        return { ...d.data.response, list: [] };
      }
      throw d;
    })
    .catch(d => {
      errorCode(d.data);
    });
};

function preFormater(req?: typeLists.request): typeLists.request {
  return {
    search_complex: req ? req.search_complex : undefined,
    sort: req ? req.sort : undefined,
    sort_type: req ? req.sort_type : undefined,
    count: req ? req.count : undefined,
    page: req ? req.page : undefined,
    page_num: req ? req.page_num : undefined,
    perpage: req ? req.perpage : undefined,
  };
}
